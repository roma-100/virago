@import '_init';
@import 'style';

$hello-circle--size: 8vw;
$hello__circle456--left: 10vw;
$hello__circle14--top: 1vw;
$hello__circle25--top: 10vw;
$hello__circle36--top: 19vw;
$hello-mhz--top: 30vw;

/* +++ test */
$tablet-width: 768px;
$desktop-width: 1024px;


/* --- test */
@mixin bp($min: 0, $max: 0) {
  $type: type-of($min);

  @if $type == string {
    @if $min == small { 
      @media only screen and (max-width: 480px) { @content; }
    }

    @else if $min == medium {
      @media only screen and (min-width: 481px) and (max-width: 1440px) { @content; }
    }

    @else if $min == large {
      @media only screen and (min-width: 1441px) { @content; }
    }

    @else if $min == mobile {
      @media only screen and (max-width: 768px) { @content; }
    }

    @else if $min == desktop {
      @media only screen and (min-width: 769px) { @content; }
    }

    // Otherwise pass a warning to the compiler as to the appropriate options
    @else {
      @warn "The breakpoint mixin supports the following attributes: mobile, desktop, small, medium, large";
    }
  }
  @else if $type == number {
    // Allow for custom parameters for min and max size
    $query: "all" !default;
    @if      $min != 0 and $max != 0 { $query: "(min-width: #{$min}) and (max-width: #{$max})"; } // set both min and max
    @else if $min != 0 and $max == 0 { $query: "(min-width: #{$min})"; } // set just min
    @else if $min == 0 and $max != 0 { $query: "(max-width: #{$max})"; } // set just max
    @media #{$query} { @content; }
  }
}
$value: 42;
$length: $value + px;
@include bp (0px, 700px){
  .hero-container {
    height: 10vw; 
  }
}
/* --- test */
.hero-container {
  width: 100vw;
  height: 30vw; 

  background-color: rgb(221, 215, 215);
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  background: #010316 url('../img/bc-earth.jpg') 0 0/100% auto no-repeat;

  /* background: url('../img/bc-earth.jpg') 0 0/100% auto no-repeat; */
  &>* {
    margin-left: 3vw;
    margin-top: 2vw;
  }

  .hello-name {
    /* background-color: rgb(235, 182, 182); */
    display: inline-block;
    font-family: 'Mina-Bold';
    font-size: 6vw;
    color: white;
    text-shadow: 0 0 20px white;
    margin-top: 6vw;
  }

  .hello__circle-container {
    width: 100%;
    height: 100%;
    position: relative;

    /* background-color: rgb(122, 117, 117); */
    .circle1,
    .circle2,
    .circle3,
    .circle4,
    .circle5,
    .circle6 {
      position: absolute;
      width: $hello-circle--size;
      height: $hello-circle--size;
      background-color: white;
      border-radius: 50%;
      cursor: pointer;
      
    }

    .circle1,
    .circle4 {
      top: $hello__circle14--top;
    }

    .circle2,
    .circle5 {
      top: $hello__circle25--top;
    }

    .circle3,
    .circle6 {
      top: $hello__circle36--top;
    }

    .circle4,
    .circle5,
    .circle6 {
      left: $hello__circle456--left;
    }
    .circle-img {
      width: calc($hello-circle--size - 2vw);
      height: auto;
      /* background: #000; */
      /* padding: 2vw; */
     /*  width: 20px; */
     margin-top: 1.5vw;
     margin-left: 1vw;
    }

    .hello-mhz {
      position: absolute;
      color: white;
      font-family: 'Mina-Bold';
      font-size: 3vw;
      top:$hello-mhz--top;
      --animate-duration: 2s;
      text-shadow: 0 0 20px white;
      /* top: 80vw; */
    }
  }

}